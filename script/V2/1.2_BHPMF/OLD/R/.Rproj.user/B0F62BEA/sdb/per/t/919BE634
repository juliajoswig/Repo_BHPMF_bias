{
    "contents" : "# rm(list=ls())\n\n# hierarchy_file_name = \"../data//phyAllInfo.txt\"\n# X_file_name = \"../data/trait_trans_info.txt\"\n# num_hierarch_level = 4\n\nPreprocessCv <- function(X, hierarchy.info, num.folds, tmp.dir) {\n#Missing Values should be stored as NA\n\nsource(\"countNumTraits.R\")\nsource(\"generatePermutation.R\")\nsource(\"splitData.R\")\nsource(\"findFold.R\")\nsource(\"buildUpperLevelMat.R\")\n\nlibrary(Matrix)\n\nif (!sum(is.na(X))) {\n   stop(\"No missing value in X! Missing Values should be stored as NA.\")\n}\n\nif (num.folds < 2) {\n   stop(\"num.folds should be greater than 2.\")\n}\n\nif (!is.matrix(X)) {\n   stop(\"X should be a matrix. You may use as.matrix to convert X to a matrix.\")\n}\n\nnrows = nrow(X);\nncols = ncol(X);\n\nif (nrow(hierarchy.info) != nrows) {\n   stop(\"Number of rows of hierarchy.info and X should be the same!\")\n}\n\nnum.hierarchy.levels <- ncol(hierarchy.info)\n\n# Create a temp directory for keeping preprocess files\n# output_dir = paste(tempdir(), \"/BHPMFAuthorsTmp\", sep = \"\")\n# output_dir = \"/tmp/BHPMFAuthorsTmp\"\n# if(file.exists(output_dir))\n#\t\tunlink(output_dir, recursive = TRUE, force = TRUE)\n# dir.create(output_dir)\n\ncolumn_names <- colnames(X)\n\n# check if all columns has at least one observation. \nfor (ind in 1: ncols) {\n\tif (!sum(!is.na(X[, ind]))) {\n\t   stop(\"there is no available observation for column\", ind, \"!\\n\")\n\t}\n}\n\n# check if the hierarchy.info contains all information for all observations\nfor (ind in 1: num.hierarchy.levels) {\n\tif (sum(!is.na(hierarchy.info[, ind])) < nrows) {\n       stop(\"there are observation with no hierarchy info at level\", ind, \"!\\n\")\n    }\n}\n\n# print(\"Count Number of Traits per Observation ...\")\n# noTraits: a vector of size observation containing number of available trait per observation\n# indObs:  a vector containing index of observation with at least one available trait\n# traitIds: containing index of available trait per observation\nres <- countNumTraits(X, 1);\nnoTraits <- res[[1]];\nindObs <- res[[2]];\ntraitIds <- res[[3]];\nfileName  <- paste(tmp.dir, \"/freqObsNoTraits_pmf.Rda\", sep=\"\");\nsave(noTraits, indObs ,traitIds, file=fileName)\n\nif (length(indObs) < nrows) {\n   stop(\"There are observations with all features missing! \\n \n   Observations with all features missing should be removed!\")\n}\n\n# find non-zero elements\nIdx <- which(!is.na(X), arr.ind=TRUE);\nval <- X[Idx];\n\n# Y: 3-column matrix: sparse representation of trait info\n# each row is a triple (i, j, value)\n# i: observation index (row index)\n# j: feature index (column index)\n# vlaue: the observed value\nY <- cbind(Idx, val);\nrm(Idx, val);\n\nfile_name <-paste(tmp.dir, \"/ProcessedData_pmf.Rda\", sep=\"\")\nsave (X, Y, column_names, file = file_name)\nrm(file_name, res)\n\n# %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n# %%Split Dataset to training, test, validation set\n# %% Similar to CV (10 fold) some data may appear more than once in test set\n# %% (not completly disjoint)\n# %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%\n# call generatePermutation\nptm <- proc.time()\n# permute_file <-paste(output_dir, \"/permutationMat.Rda\", sep=\"\");\nfile_name <-paste(tmp.dir, \"/traits_trees_atleastone_\", sep=\"\");\ntree_file <-paste(tmp.dir, \"/ProcessedData_pmf.Rda\", sep=\"\");\n# split the dataset for cross validation\ncat(\"Splitting the data ...\")\n# find_folds(X, num.folds, file_name, tree_file, output_dir, 0, trait_names, 1, num.hierarchy.levels)\nfind_folds(X, num.hierarchy.levels, num.folds, 0, tmp.dir)\n\ncat(\"preprocess the hierachy: \\n\") \ncat(tmp.dir, \"\\n\")\nsource(\"findPhyloInfo.R\")\nPreprocessHierarchy(X, hierarchy.info, tmp.dir)\n\ncat(\"\\n Building upper level matrices...\")\n# build upper level matrices for each fold\nbuildUpperLevelMat(tmp.dir, 0, column_names, num.hierarchy.levels, num.folds)\n\ncat(\"preprocessing time: \", proc.time() - ptm, \"\\n\")\n}",
    "created" : 1439281018419.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1666529184",
    "id" : "919BE634",
    "lastKnownWriteTime" : 1438584644,
    "path" : "M:/projects/FDiversity/hierarchy/hpmf_method_paper/scripts/HPMF_v1.6/R/preprocess_cv.R",
    "project_path" : "preprocess_cv.R",
    "properties" : {
    },
    "relative_order" : 4,
    "source_on_save" : false,
    "type" : "r_source"
}