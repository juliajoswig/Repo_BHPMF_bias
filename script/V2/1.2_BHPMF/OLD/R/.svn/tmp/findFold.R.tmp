findFolds <- function(zsLogTrain, numFolds, filename, treeFile, secondCV, traitNames, testFlag){

<<<<<<< .working
    if(nchar(permuteFile) != 0){
		all = as.matrix(sparseMatrix(zsLogTrain[, 1], zsLogTrain[, 2], x = zsLogTrain[, 3]));
	}
	else {
		all = zsLogTrain;
    }
=======
>>>>>>> .merge-right.r26
    
<<<<<<< .working
    res <- countNumTraits(all, 0);
=======
    all = sparseMatrix(zsLogTrain[, 1], zsLogTrain[, 2], x = zsLogTrain[, 3]);
    
    res <- countNumTraits(all);
>>>>>>> .merge-right.r26
    noTraits <- res[[1]];
    indObs <- res[[2]];
    traitIds <- res[[3]];
    rm(res)

<<<<<<< .working

=======
>>>>>>> .merge-right.r26
    res <- generatePermutation(noTraits, traitIds, numFolds, testFlag);
    permutMatTest <- res[[1]];
    permutMatV <- res[[2]];
    rm(res)
    
<<<<<<< .working

    res <- splitData(permutMatTest, permutMatV, noTraits, all, all, traitNames, filename, treeFile, inputDir, secondCV, testFlag, level);
                    
    indValid = res[[1]];
    indTest = res[[2]];
    indTrain = res[[3]];
    rm(res);
=======
    res <- splitData(permutMatTest, permutMatV, noTraits, all, all, traitNames, filename, treeFile, secondCV, testFlag);
    rm(res)
>>>>>>> .merge-right.r26

}